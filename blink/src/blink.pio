; File: blink.pio

.program blink
.side_set 1 optional

	pull block 		side 0

.wrap_target
	out x, 32		side 1	; backup OSR --> X.
	pull noblock			; Try TX_FIFO -> OSR, if empty X --> OSR
	mov y, osr				; OSR에서 32비트 데이터를 Y로 복사.

	mov x, y
lp1:
	jmp x-- lp1				; High 시간 (x + 1) 사이클

	mov x, y		side 0	[3]
lp2:
	jmp x-- lp2				; Low 시간 (x + 1) 사이클
.wrap						; 여기서도 1cycle 먹음.

; total 8 + (2 * (in + 1)) cycles

% c-sdk {
static inline void blink_program_init(PIO pio, uint sm, uint offset, uint pin)
{
   pio_sm_config c = blink_program_get_default_config(offset);
   sm_config_set_sideset_pins(&c, pin);
   //sm_config_set_set_pins(&c, pin, 1);
   sm_config_set_out_shift(&c, true, false, 32);

   pio_gpio_init(pio, pin);
   pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

   //sm_config_set_clkdiv(&c, 125000.0);
   sm_config_set_clkdiv(&c, 250000.0);
   pio_sm_init(pio, sm, offset, &c);
   pio_sm_set_enabled(pio, sm, true);
}

%}